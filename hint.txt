2024/12/05
    1. sql parser
    2. interface


总结：
    1. 传统面向对象的继承关系自带了引用，而在go这样使用struct的语言里面要自己控制引用&
    2. 对于b+tree， 主要的坑点在于字节点分裂后，上层节点的调整问题
    3. 对于复杂的逻辑，单测很重要，单测的主要逻辑是基于数据面的测试



struct 的属性大写可以给别人看
main 包中引用的包，需要包名进行调用
初始化函数一般返回指针（函数定义时候是*，函数体返回的是&)
使用 strings.Repeat来进行字符串复制，复制过程中传入两个参数，第一个参数是一个字符串用”“包裹，第二个参数是重复的数量
append 函数用来给数组加入新值，go 中的这种 api 是函数式的调用append(n.Children, child)


os.OpenFile()
    打开文件
binary.BigEndian.PutUint32(buf[:idlength], int32(id))
binary.Write(buf1, binary.Bigendian, uint32)
    大端序把 int 以 byte 写入 buf
binary.BigEndian.Uint32(idbuf)
    直接转换
copy(buf[length:], nameBytes)
    复制 
f.Write(buf)
    写入

第二次用 err 不用：

io.ReadFull(f, nameBuf)
    读最新 